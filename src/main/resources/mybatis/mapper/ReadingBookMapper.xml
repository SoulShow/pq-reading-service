<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pq.reading.mapper.ReadingBookMapper" >
  <resultMap id="BaseResultMap" type="com.pq.reading.entity.ReadingBook" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="album_id" property="albumId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pq_reading_book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pq.reading.entity.ReadingBook" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pq_reading_book (name, introduce, img, 
      album_id, type, state, created_time, 
      updated_time)
    values (#{name,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{albumId,jdbcType=BIGINT}, #{type,jdbcType=BIT}, #{state,jdbcType=BIT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.pq.reading.entity.ReadingBook" >
    update pq_reading_book
    set name = #{name,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      album_id = #{albumId,jdbcType=BIGINT},
      type = #{type,jdbcType=BIT},
      state = #{state,jdbcType=BIT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, introduce, img, album_id, type, state, created_time, updated_time
    from pq_reading_book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, introduce, img, album_id, type, state, created_time, updated_time
    from pq_reading_book
  </select>
  <select id="selectByAlbumId" resultMap="BaseResultMap" >
    select id, name, introduce, img, album_id, type, state, created_time, updated_time
    from pq_reading_book
    where album_id = #{albumId}
    and state = 1
    order by created_time desc
    limit #{offset},#{size}
  </select>
</mapper>